(defcfg
  ;; For Linux
  input  (device-file "/dev/input/by-id/usb-05f3_0007-event-kbd")
  output (uinput-sink "My KMonad output"
    ;; To understand the importance of the following line, see the section on
    ;; Compose-key sequences at the near-bottom of this file.
    "sleep 1 && setxkbmap -option compose:ralt")
  cmp-seq ralt  ;; Set the compose key to `RightAlt'

  ;; For Windows
  ;; input  (low-level-hook)
  ;; output (send-event-sink)

  ;; For MacOS
  ;; input  (iokit-name "my-keyboard-product-string")
  ;; output (kext)

  ;; Comment this is you want unhandled events not to be emitted
  fallthrough true

  ;; Set this to false to disable any command-execution in KMonad
  allow-cmd true
)


#| Qwerty
 |#
(defsrc
  =    1    2    3    4    5    6    7    8    9    0    -
  tab  q    w    e    r    t    y    u    i    o    p    [
  caps a    s    d    f    g    h    j    k    l    ;    '
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  grv  102d left rght                     down up   \    = 
  bspc lmet end                                pgup pgdn 
  rctl esc lalt                                ralt ret  spc
)

 #| Dvorak
(defsrc
  ]    1    2    3    4    5    6    7    8    9    0    [
  tab  '    ,    .    p    y    f    g    c    r    l    /
  caps a    o    e    u    i    d    h    t    n    s    -
  lsft ;    q    j    k    x    b    m    w    v    z    rsft
  grv  102d left right                    down up   \    = 
  bspc lmet end                                pgup pgdn ;; rctl
  lctl esc lalt                                ralt ret  spc
)
|#

(defalias
  ;; num  (layer-toggle numbers) ;; Bind num to a button that switches to a layer
  ;; tnum (tap-hold-next 200 tab @num)
  tab (tap-hold-next 200 tab (layer-toggle tabbed))
  cap (tap-hold-next 200 caps (layer-toggle extend))
  csp (tap-hold-next 200 spc ctl)
  sr (tap-hold-next 200 ret rsft)
  sl (tap-hold-next 200 esc lsft)
  q C-spc
  ;; Symbols needs to be translated to equivalent qwerty
  ;; This is because use Xorg Dvorak mod which translates afterward
  D[ -
  D] =
  D{ \_
  D} +
  D0[ \(
  D0] \)
  D\ #
  D: Z
  AR (tap-next (around-next ralt) ralt) 
)

(deflayer as-qwerty
  =    1    2    3    4    5    6    7    8    9    0    -
  @tab q    w    e    r    t    y    u    i    o    p    [
  @cap a    s    d    f    g    h    j    k    l    ;    '
  @sl  z    x    c    v    b    n    m    ,    .    /    @sr 
  grv  102d left right                    down up   \    ] 
  bspc lmet end                                pgup ralt 
  @csp esc lalt                                pgdn ret  spc
)

(deflayer dvorak
  ]    1    2    3    4    5    6    7    8    9    0    [
  @tab '    ,    .    p    y    f    g    c    r    l    /
  @cap a    o    e    u    i    d    h    t    n    s    -
  @sl  ;    q    j    k    x    b    m    w    v    z    @sr 
  grv  102d left right                    down up   \    = 
  bspc lmet end                                pgup ralt
  @csp esc lalt                                @AR  ret  spc
)


(deflayer tabbed
  XX   XX   XX   XX   XX   XX   @D{  nlck =    kp/  kp*  @D}
  XX   XX   XX   XX   XX   XX   @D[  kp7  kp8  kp9  kp-  @D]
  XX   XX   XX   XX   @q   XX   @D0[ kp4  kp5  kp6  kp+  @D0]
  XX   XX   XX   XX   XX   XX   kp0  kp1  kp2  kp3  kprt XX
  XX   XX   XX   XX                  kp0  kp0  kp.  kprt
  XX   XX   XX                                 XX   XX  
  XX   XX   XX                                 XX   XX   XX 
)


(deflayer extend
  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX
  XX   XX   XX   XX   XX   XX   home @D0[ @D0] @D{  @D}  @D\
  XX   XX   XX   XX   XX   XX   left down up   rght bspc   XX
  XX   XX   XX   XX   XX   XX   XX   @D[  @D]  @D:    esc  XX
  XX   XX   XX   XX                       XX   XX   XX   XX
  XX   XX   XX                                 XX   XX  
  XX   XX   XX                                 XX   XX   XX 
)
